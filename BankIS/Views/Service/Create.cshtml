@model BankIS.ViewModels.ServiceServiceTypeViewModel

@{
    ViewBag.Title = "Service";
}

<h2>Service</h2>


<h4 class="text-success">
    @ViewBag.messageSuccess
</h4>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Service</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Service.Rate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Service.Rate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Service.Rate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Service.BeginDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" data-val="true" data-val-date="The field BeginDate must be a date."
                       data-val-required="The BeginDate field is required."
                       id="BeginDate" name="BeginDate" type="date" />
                @Html.ValidationMessageFor(model => model.Service.BeginDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Service.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input class="form-control" data-val="true" data-val-date="The field EndDate must be a date."
                       data-val-required="The EndDate field is required."
                       id="EndDate" name="EndDate" type="date" />
                @Html.ValidationMessageFor(model => model.Service.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Service.ServiceTypeId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Service.ServiceTypeId, new SelectList(Model.ServiceTypes, "Id", "Name"), "Select Service", new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
